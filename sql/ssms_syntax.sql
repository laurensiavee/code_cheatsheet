-- CREATE
IF NOT EXISTS(SELECT '' FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_NAME = 'MAJOR')
BEGIN
	CREATE TABLE MAJOR (
		MAJOR_ID BIGINT IDENTITY NOT NULL PRIMARY KEY,
		MAJOR_NAME VARCHAR(50) NOT NULL,
		MAJOR_CODE VARCHAR(9) NOT NULL,
		USR_CRT VARCHAR(20) NOT NULL,
		DTM_CRT DATETIME NOT NULL,
		USR_UPD VARCHAR(20) NOT NULL,
		DTM_UPD DATETIME NOT NULL
	);
END

IF NOT EXISTS(SELECT '' FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_NAME = 'STUDENT')
BEGIN
	CREATE TABLE STUDENT (
		STUDENT_ID BIGINT IDENTITY NOT NULL PRIMARY KEY,
		STUDENT_NAME VARCHAR(50) NOT NULL,
		STUDENT_GRADE DECIMAL NOT NULL DEFAULT 0,
		MAJOR_ID BIGINT NOT NULL FOREIGN KEY REFERENCES MAJOR(MAJOR_ID),
		USR_CRT VARCHAR(20) NOT NULL,
		DTM_CRT DATETIME NOT NULL,
		USR_UPD VARCHAR(20) NOT NULL,
		DTM_UPD DATETIME NOT NULL
	);
END

IF NOT EXISTS(SELECT '' FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_NAME = 'CLASS')
BEGIN
	CREATE TABLE CLASS (
		CLASS_ID BIGINT IDENTITY NOT NULL PRIMARY KEY,
		CLASS_NAME VARCHAR(50) NOT NULL,
		CLASS_CODE VARCHAR(9) NOT NULL,
		USR_CRT VARCHAR(20) NOT NULL,
		DTM_CRT DATETIME NOT NULL,
		USR_UPD VARCHAR(20) NOT NULL,
		DTM_UPD DATETIME NOT NULL
	);
END

IF NOT EXISTS(SELECT '' FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_NAME = 'SCORE')
BEGIN
	CREATE TABLE SCORE (
		SCORE_ID BIGINT IDENTITY NOT NULL PRIMARY KEY,
		STUDENT_ID BIGINT NOT NULL FOREIGN KEY REFERENCES STUDENT(STUDENT_ID),
		CLASS_ID BIGINT NOT NULL FOREIGN KEY REFERENCES CLASS(CLASS_ID),
		SCORE DECIMAL NOT NULL DEFAULT 0,
		USR_CRT VARCHAR(20) NOT NULL,
		DTM_CRT DATETIME NOT NULL,
		USR_UPD VARCHAR(20) NOT NULL,
		DTM_UPD DATETIME NOT NULL
	);
END

-- ALTER
IF NOT EXISTS(
  SELECT TOP 1 1
  FROM INFORMATION_SCHEMA.COLUMNS
  WHERE [TABLE_NAME] = 'STUDENT'
    AND [COLUMN_NAME] = 'EMAIL')
BEGIN
	ALTER TABLE STUDENT
	ADD EMAIL VARCHAR(50) NULL
END

-- INSERT
INSERT INTO MAJOR
VALUES
('Computer Science', 'CS', 'test', GETDATE(), 'test', GETDATE())

DECLARE @majorId BIGINT
SET @majorId = ( select TOP 1 [MAJOR_ID] from MAJOR where MAJOR_CODE = 'CS')

IF NOT EXISTS(SELECT '' FROM STUDENT WHERE STUDENT_NAME = 'dummy cs')
AND (@majorId IS NOT NULL)
BEGIN
	INSERT INTO STUDENT
	VALUES
	('dummy cs', 0, @majorId, 'test', GETDATE(), 'test', GETDATE(), NULL)
END

-- UPDATE
IF EXISTS(SELECT '' FROM STUDENT WHERE STUDENT_NAME = 'dummy cs')
BEGIN
	UPDATE STUDENT
	SET EMAIL = 'baobei@email.com'
	WHERE STUDENT_NAME = 'dummy cs'
END

-- UPDATE WITH TRAN
BEGIN TRAN UPDATEDUMMY

select 'BEFORE', EMAIL, * from STUDENT where STUDENT_NAME = 'dummy cs'

	UPDATE STUDENT
	SET EMAIL = 'baobei_q@email.com'
	WHERE STUDENT_NAME = 'dummy cs'

select 'AFTER', EMAIL, * from STUDENT where STUDENT_NAME = 'dummy cs'

--ROLLBACK TRAN UPDATEDUMMY
COMMIT TRAN UPDATEDUMMY

-- DELETE 
DELETE FROM STUDENT
WHERE STUDENT_NAME = 'dummy cs'

-- DROP TABLE
IF OBJECT_ID(N'tempdb..#TEMPV_A') IS NOT NULL BEGIN DROP TABLE #TEMPV_A END

-- SELECT
SELECT * FROM STUDENT
SELECT * FROM MAJOR

-- JOIN

-- SELECT INTO TEMP_TABLE